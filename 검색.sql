/*---------------------------------------------
-- 오브젝트명: CZONE_USER.V_STAT_SAMPLE2
-- 생성일자 : 2022-06-13 17:47:04.0
-- 오브젝트명: 2022-06-13 18:02:18.0
-- 상태: VALID
---------------------------------------------*/
CREATE OR REPLACE FORCE EDITIONABLE VIEW "CZONE_USER"."V_STAT_SAMPLE2" ("DUMMY") AS 
  SELECT "DUMMY" FROM DUAL 
/*
SELECT AREA_CD
      ,CD_NM
      ,REGION_AREA
      ,C0||
      ' '||DECODE(C0,GREATEST(C0,C1,C2,C3,C4,C5,C6,C7,C8,C9), '▲')
      ||DECODE(C0,LEAST(C0,C1,C2,C3,C4,C5,C6,C7,C8,C9),'▼')||' *'
      ||LTRIM(DECODE(GR,'00',NVL(SUBSTR(R0,1,2),D_MXRK),'01',NVL(SUBSTR(R0,3,2),M_MXRK),NVL(SUBSTR(R0,5),T_MXRK)),'0') C0
       ,C1||
       ' '||DECODE(C1,GREATEST(C0,C1,C2,C3,C4,C5,C6,C7,C8,C9), '▲')
      ||DECODE(C1,LEAST(C0,C1,C2,C3,C4,C5,C6,C7,C8,C9),'▼')||' *'|
      |LTRIM(DECODE(GR,'00',NVL(SUBSTR(R1,1,2),D_MXRK),'01',NVL(SUBSTR(R1,3,2),M_MXRK),NVL(SUBSTR(R1,5),T_MXRK)),'0') C1
       ,C2||
       ' '||DECODE(C2,GREATEST(C0,C1,C2,C3,C4,C5,C6,C7,C8,C9), '▲')
      ||DECODE(C2,LEAST(C0,C1,C2,C3,C4,C5,C6,C7,C8,C9),'▼')||' *'
      ||LTRIM(DECODE(GR,'00',NVL(SUBSTR(R2,1,2),D_MXRK),'01',NVL(SUBSTR(R2,3,2),M_MXRK),NVL(SUBSTR(R2,5),T_MXRK)),'0') C2
       ,C3||
       ' '||DECODE(C3,GREATEST(C0,C1,C2,C3,C4,C5,C6,C7,C8,C9), '▲')
      ||DECODE(C3,LEAST(C0,C1,C2,C3,C4,C5,C6,C7,C8,C9),'▼')||' *'
      ||LTRIM(DECODE(GR,'00',NVL(SUBSTR(R3,1,2),D_MXRK),'01',NVL(SUBSTR(R3,3,2),M_MXRK),NVL(SUBSTR(R3,5),T_MXRK)),'0') C3
       ,C4||
       ' '||DECODE(C4,GREATEST(C0,C1,C2,C3,C4,C5,C6,C7,C8,C9), '▲')
      ||DECODE(C4,LEAST(C0,C1,C2,C3,C4,C5,C6,C7,C8,C9),'▼')||' *'
      ||LTRIM(DECODE(GR,'00',NVL(SUBSTR(R4,1,2),D_MXRK),'01',NVL(SUBSTR(R4,3,2),M_MXRK),NVL(SUBSTR(R4,5),T_MXRK)),'0') C4
       ,C5||
       ' '||DECODE(C5,GREATEST(C0,C1,C2,C3,C4,C5,C6,C7,C8,C9), '▲')
      ||DECODE(C5,LEAST(C0,C1,C2,C3,C4,C5,C6,C7,C8,C9),'▼')||' *'
      ||LTRIM(DECODE(GR,'00',NVL(SUBSTR(R5,1,2),D_MXRK),'01',NVL(SUBSTR(R5,3,2),M_MXRK),NVL(SUBSTR(R5,5),T_MXRK)),'0') C5
       ,C6||
       ' '||DECODE(C6,GREATEST(C0,C1,C2,C3,C4,C5,C6,C7,C8,C9), '▲')
      ||DECODE(C6,LEAST(C0,C1,C2,C3,C4,C5,C6,C7,C8,C9),'▼')||' *'
      ||LTRIM(DECODE(GR,'00',NVL(SUBSTR(R6,1,2),D_MXRK),'01',NVL(SUBSTR(R6,3,2),M_MXRK),NVL(SUBSTR(R6,5),T_MXRK)),'0') C6
       ,C7||
       ' '||DECODE(C7,GREATEST(C0,C1,C2,C3,C4,C5,C6,C7,C8,C9), '▲')
      ||DECODE(C7,LEAST(C0,C1,C2,C3,C4,C5,C6,C7,C8,C9),'▼')||' *'
      ||LTRIM(DECODE(GR,'00',NVL(SUBSTR(R7,1,2),D_MXRK),'01',NVL(SUBSTR(R7,3,2),M_MXRK),NVL(SUBSTR(R7,5),T_MXRK)),'0') C7
       ,C8||
       ' '||DECODE(C8,GREATEST(C0,C1,C2,C3,C4,C5,C6,C7,C8,C9), '▲')
      ||DECODE(C8,LEAST(C0,C1,C2,C3,C4,C5,C6,C7,C8,C9),'▼')||' *'
      ||LTRIM(DECODE(GR,'00',NVL(SUBSTR(R8,1,2),D_MXRK),'01',NVL(SUBSTR(R8,3,2),M_MXRK),NVL(SUBSTR(R8,5),T_MXRK)),'0') C8
       ,C9||
       ' '||DECODE(C9,GREATEST(C0,C1,C2,C3,C4,C5,C6,C7,C8,C9), '▲')
      ||DECODE(C9,LEAST(C0,C1,C2,C3,C4,C5,C6,C7,C8,C9),'▼')||' *'
      ||LTRIM(DECODE(GR,'00',NVL(SUBSTR(R9,1,2),D_MXRK),'01',NVL(SUBSTR(R9,3,2),M_MXRK),NVL(SUBSTR(R9,5),T_MXRK)),'0') C9
      ,TOT
FROM (
  SELECT AREA_CD 
        ,DECODE(GROUPING(AREA_CD)||GROUPING(REGION_AREA),
         '00',MIN(CD_NM),'01',MIN(CD_NM)||'합계','총계') CD_NM
        ,REGION_AREA
        ,NVL(SUM(DECODE(PROD_ID,'100000',SALE_CNT)),0)C0
        ,NVL(SUM(DECODE(PROD_ID,'100001',SALE_CNT)),0)C1
        ,NVL(SUM(DECODE(PROD_ID,'100002',SALE_CNT)),0)C2
        ,NVL(SUM(DECODE(PROD_ID,'100003',SALE_CNT)),0)C3
        ,NVL(SUM(DECODE(PROD_ID,'100004',SALE_CNT)),0)C4
        ,NVL(SUM(DECODE(PROD_ID,'100005',SALE_CNT)),0)C5
        ,NVL(SUM(DECODE(PROD_ID,'100006',SALE_CNT)),0)C6
        ,NVL(SUM(DECODE(PROD_ID,'100007',SALE_CNT)),0)C7
        ,NVL(SUM(DECODE(PROD_ID,'100008',SALE_CNT)),0)C8
        ,NVL(SUM(DECODE(PROD_ID,'100009',SALE_CNT)),0)C9
        ,MIN(DECODE(PROD_ID,'100000',LPAD(D_RK,2,'0')||LPAD(M_RK,2,'0')||LPAD(T_RK,2,'0'))) R0
        ,MIN(DECODE(PROD_ID,'100001',LPAD(D_RK,2,'0')||LPAD(M_RK,2,'0')||LPAD(T_RK,2,'0'))) R1
        ,MIN(DECODE(PROD_ID,'100002',LPAD(D_RK,2,'0')||LPAD(M_RK,2,'0')||LPAD(T_RK,2,'0'))) R2
        ,MIN(DECODE(PROD_ID,'100003',LPAD(D_RK,2,'0')||LPAD(M_RK,2,'0')||LPAD(T_RK,2,'0'))) R3
        ,MIN(DECODE(PROD_ID,'100004',LPAD(D_RK,2,'0')||LPAD(M_RK,2,'0')||LPAD(T_RK,2,'0'))) R4
        ,MIN(DECODE(PROD_ID,'100005',LPAD(D_RK,2,'0')||LPAD(M_RK,2,'0')||LPAD(T_RK,2,'0'))) R5
        ,MIN(DECODE(PROD_ID,'100006',LPAD(D_RK,2,'0')||LPAD(M_RK,2,'0')||LPAD(T_RK,2,'0'))) R6
        ,MIN(DECODE(PROD_ID,'100007',LPAD(D_RK,2,'0')||LPAD(M_RK,2,'0')||LPAD(T_RK,2,'0'))) R7
        ,MIN(DECODE(PROD_ID,'100008',LPAD(D_RK,2,'0')||LPAD(M_RK,2,'0')||LPAD(T_RK,2,'0'))) R8
        ,MIN(DECODE(PROD_ID,'100009',LPAD(D_RK,2,'0')||LPAD(M_RK,2,'0')||LPAD(T_RK,2,'0'))) R9
        ,SUM(SALE_CNT) TOT
        ,GROUPING(AREA_CD)||GROUPING(REGION_AREA) GR
        ,MAX(D_RK)+1 D_MXRK
        ,MAX(M_RK)+1 M_MXRK
        ,MAX(T_RK)+1 T_MXRK		
  FROM (
    SELECT AREA_CD 
          ,REGION_AREA
          ,PROD_ID
          ,SALE_CNT
          ,DENSE_RANK() OVER(PARTITION BY AREA_CD,REGION_AREA ORDER BY SALE_CNT DESC) D_RK
          ,DENSE_RANK() OVER(PARTITION BY AREA_CD ORDER BY M_CNT DESC) M_RK
          ,DENSE_RANK() OVER(ORDER BY T_CNT DESC) T_RK
    FROM (
      SELECT AREA_CD 
            ,REGION_AREA
            ,PROD_ID
            ,SUM(SALE_CNT) SALE_CNT
            ,SUM(SUM(SALE_CNT)) OVER(PARTITION BY AREA_CD,PROD_ID) M_CNT
            ,SUM(SUM(SALE_CNT)) OVER(PARTITION BY PROD_ID) T_CNT
      FROM SALE_TBL
      WHERE AREA_CD = NVL(:V_AREACD,AREA_CD)
      AND   ROWNUM <= :V_CNT      
      GROUP BY AREA_CD 
              ,REGION_AREA
              ,PROD_ID
  )  
  )A , CD_TBL B
WHERE A.AREA_CD = B.CD_ID
AND   LENGTH(B.CD_ID) = 2 
GROUP BY ROLLUP(AREA_CD,REGION_AREA)       
ORDER BY AREA_CD
        ,REGION_AREA        
) WHERE GR = NVL(:V_GR,GR)
ORDER BY DECODE(AREA_CD,'10',:V_10
               ,'20',:V_20
               ,'30',:V_30
               ,'40',:V_40
               ,'50',:V_50
               ,'60',:V_60
               ,'70',:V_70
               ,'80',:V_80
               ,'90',:V_90 )
          ,DECODE(:V_DIR,'F',1,-1)*TO_NUMBER(GR)                    

;
*/;
