/* 계층 
트리 그래프
사이클 생성여부 사이클 허용 트리
나로 시작해서 나한테 다시 돌아오는가
계층형은 사이클이 없음을 전제로 한다.

 문법
START WITH
CONNECT BY
PRIOR

테이블 구조

두가지를 지켜줘야 한다.

/*
SELECT SYS_CONNECT_BY_PATH(DGT, '->') -- 경로를 볼 수 있다.
FROM HIR_TST
CONNECT BY PRIOR DGT = PDGT 
START WITH PDGT IS NULL 
;
*/


/*
-- 역방향
SELECT DGT, SYS_CONNECT_BY_PATH(DGT, '->'), LEVEL
FROM HIR_TST
CONNECT BY DGT = PRIOR PDGT -- 경로를 볼 수 있다.
START WITH DGT = 6
;
*/


/* 
SELECT DGT
       ,SYS_CONNECT_BY_PATH(DGT, '->') PATH_
       ,LPAD(' ', (LEVEL-1)*6, ' ' ) || '|-' || DGT PATH__
FROM HIR_TST
CONNECT BY PRIOR DGT = PDGT -- PRIOR를 어디에 붙여주냐에 따라 전개 방향이 달라짐
START WITH PDGT IS NULL;
;
*/


/* 
-- > 오류 넣어보기 무한루프
SELECT *
FROM HIR_TST
UNION ALL
SELECT 10, 11
FROM DUAL;

SELECT LPAD(' ', (LEVEL-1)*6, ' ' ) || '|-' || DGT DGT_TREE
      ,CONNECT_BY_ROOT DGT
      ,DGT
      ,PDGT
      ,CONNECT_BY_ISCYCLE CYC
FROM HIR_TST
CONNECT BY NOCYCLE PRIOR DGT = PDGT
START WITH DGT = 1;
*/


/* 
SELECT SYS_CONNECT_BY_PATH(DGT,'/') PATH
    ,LPAD(' ',(LEVEL-1) *6 ) || '-' || DGT
    ,DGT, PDGT
FROM HIR_TST
CONNECT BY PRIOR DGT = PDGT
START WITH DGT = 1
;
*/

SELECT SYS_CONNECT_BY_PATH(DGT,'/') PATH
    ,LPAD(' ',(LEVEL-1) *6) || '-' || DGT S
    ,CONNECT_BY_ROOT DGT SYS_ROOT
    ,DGT
    ,PDGT
FROM HIR_TST
CONNECT BY PRIOR DGT = PDGT
START WITH DGT = 1
--ORDER SIBLINGS BY DGT, PDGT
ORDER SIBLINGS BY DECODE(DGT, 1,2,3,4,5,6)







